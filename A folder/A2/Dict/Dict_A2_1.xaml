<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <Style x:Key="A2_1_NumericUpDown" TargetType="{x:Type xctk:DecimalUpDown}">
        <!-- TextBlock style -->
        <Style.Resources>
            <Style TargetType="{x:Type xctk:WatermarkTextBox}"  
               BasedOn="{StaticResource {x:Type xctk:WatermarkTextBox}}">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Foreground" Value="White"/>                
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type xctk:WatermarkTextBox}">
                            <Border x:Name="Border" BorderThickness="0" MinHeight="20"  BorderBrush="{TemplateBinding BorderBrush}"  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource ScorllStyle}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <ContentPresenter x:Name="PART_WatermarkHost" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" 
                                                      VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Visibility="Visible" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 上下增減值按鈕 style -->
            <Style TargetType="{x:Type xctk:ButtonSpinner}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                            <Border x:Name="Border"  SnapsToDevicePixels="True" BorderBrush="Black" BorderThickness="0">
                                <Grid Background="Black">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    <Grid Grid.Column="1" Width="19" Background="Black">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <RepeatButton  x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Background="Black" BorderThickness="0" BorderBrush="Black">
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <Image Source="../Img/NumUp.png"/>
                                                </DataTemplate>

                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>

                                        <RepeatButton x:Name="PART_DecreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Grid.Row="1" BorderThickness="0" BorderBrush="Black" Background="Black">
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <Image Source="../Img/NumDown.png"/>
                                                </DataTemplate>
                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>

                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" SourceName="PART_IncreaseButton" Value="False">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
  
    <Style x:Key="A2_1_ItemStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Gen Jyuu Gothic"/>
        <Setter Property="Padding" Value="15,0,0,0"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="A2_1_ItemStyle2" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource A2_1_ItemStyle}">
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="A2_1_btn" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#3e3a39"/>
        <Setter Property="FontFamily" Value="Gen Jyuu Gothic"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FontSize" Value="15"/>        
    </Style>

    <Style x:Key="A1_2_04_btn" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontFamily" Value="Gen Jyuu Gothic"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="5" Background="#9f9d9c" SnapsToDevicePixels="true" Margin="0,6">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#28569c"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#28569c"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#28569c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="A2_1_02_btn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FontFamily" Value="Gen Jyuu Gothic"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="White"/>        
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"  Background="#9f9d9c" SnapsToDevicePixels="true" Margin="0,6">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>     
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#28569c"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#28569c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>